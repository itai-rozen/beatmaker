{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D9\\u05EA\\u05D9\\\\Downloads\\\\go local\\\\react\\\\beatmaker\\\\client\\\\src\\\\components\\\\ControlButtons\\\\ControlButtons.js\";\nimport React from 'react';\nimport { Consumer } from '../Context';\nimport './controlbuttons.css';\n\nfunction ControlButtons() {\n  /* <button className=\"load-btn\" onClick={() => props.actions.toggleLoadModal()}>üìÅ</button>\n  <button className=\"save-btn\" onClick={() => props.actions.toggleSaveModal()}>&#128190;</button> */\n  return /*#__PURE__*/React.createElement(Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, props => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.actions.startPlaying(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"\\u25B6\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.actions.stopPlaying(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"\\u25A0\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.actions.pausePlaying(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"\\u275A\\u275A\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.actions.resetPlaying(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.actions.clearInstrument(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sliders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bpm rotate-back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"BPM\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"current-tempo rotate-back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, props.tempo), /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: props.tempo,\n    type: \"range\",\n    onMouseUp: () => props.actions.playUpdateTempo(),\n    onChange: event => props.actions.handleTempo(event),\n    id: \"tempo-slider\",\n    min: \"30\",\n    max: \"180\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mute hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rotate-back\",\n    id: \"volume-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"\\uD83D\\uDD0A\"), /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: props.volume,\n    type: \"range\",\n    onChange: event => props.actions.handleVolume(event),\n    step: \"0.01\",\n    id: \"volume-slider\",\n    min: \"0\",\n    max: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  })))));\n}\n\nexport default ControlButtons;","map":{"version":3,"sources":["C:/Users/◊ê◊ô◊™◊ô/Downloads/go local/react/beatmaker/client/src/components/ControlButtons/ControlButtons.js"],"names":["React","Consumer","ControlButtons","props","actions","startPlaying","stopPlaying","pausePlaying","resetPlaying","clearInstrument","tempo","playUpdateTempo","event","handleTempo","volume","handleVolume"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAO,sBAAP;;AAEA,SAASC,cAAT,GAA0B;AACd;AACZ;AACI,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIC,KAAK,iBAET;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAQ,IAAA,OAAO,EAAE,MAAMA,KAAK,CAACC,OAAN,CAAcC,YAAd,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,IAAA,OAAO,EAAE,MAAMF,KAAK,CAACC,OAAN,CAAcE,WAAd,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,IAAA,OAAO,EAAE,MAAMH,KAAK,CAACC,OAAN,CAAcG,YAAd,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAQ,IAAA,OAAO,EAAE,MAAMJ,KAAK,CAACC,OAAN,CAAcI,YAAd,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,eAMI;AAAQ,IAAA,OAAO,EAAE,MAAML,KAAK,CAACC,OAAN,CAAcK,eAAd,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANJ,eAOA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CN,KAAK,CAACO,KAAlD,CAFJ,eAGI;AAAS,IAAA,YAAY,EAAEP,KAAK,CAACO,KAA7B;AAAqC,IAAA,IAAI,EAAC,OAA1C;AAAkD,IAAA,SAAS,EAAE,MAAMP,KAAK,CAACC,OAAN,CAAcO,eAAd,EAAnE;AAAoG,IAAA,QAAQ,EAAGC,KAAD,IAAUT,KAAK,CAACC,OAAN,CAAcS,WAAd,CAA0BD,KAA1B,CAAxH;AAA0J,IAAA,EAAE,EAAC,cAA7J;AAA4K,IAAA,GAAG,EAAC,IAAhL;AAAqL,IAAA,GAAG,EAAC,KAAzL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADR,eAMQ;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,EAAE,EAAC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAII;AAAO,IAAA,YAAY,EAAET,KAAK,CAACW,MAA3B;AAAoC,IAAA,IAAI,EAAC,OAAzC;AAAiD,IAAA,QAAQ,EAAGF,KAAD,IAAUT,KAAK,CAACC,OAAN,CAAcW,YAAd,CAA2BH,KAA3B,CAArE;AAAwG,IAAA,IAAI,EAAC,MAA7G;AAAoH,IAAA,EAAE,EAAC,eAAvH;AAAuI,IAAA,GAAG,EAAC,GAA3I;AAA+I,IAAA,GAAG,EAAC,GAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CANR,CAPA,CAJA,CADJ;AA6BH;;AAED,eAAeV,cAAf","sourcesContent":["import React from 'react'\nimport { Consumer } from '../Context'\nimport './controlbuttons.css'\n\nfunction ControlButtons() {\n            /* <button className=\"load-btn\" onClick={() => props.actions.toggleLoadModal()}>üìÅ</button>\n            <button className=\"save-btn\" onClick={() => props.actions.toggleSaveModal()}>&#128190;</button> */\n    return (\n        <Consumer>\n            {\n            props => \n\n        <div className=\"control-panel\">\n\n            <button onClick={() => props.actions.startPlaying()} >&#9654;</button>\n            <button onClick={() => props.actions.stopPlaying()} >&#9632;</button>\n            <button onClick={() => props.actions.pausePlaying()} >&#10074;&#10074;</button>\n            <button onClick={() => props.actions.resetPlaying()} >Reset</button>\n            <button onClick={() => props.actions.clearInstrument()} >Clear</button>\n        <div className=\"sliders\">\n                <div className=\"slider\">\n                    <div className=\"bpm rotate-back\">BPM</div>\n                    <div className=\"current-tempo rotate-back\">{props.tempo}</div> \n                    <input   defaultValue={props.tempo } type=\"range\" onMouseUp={() => props.actions.playUpdateTempo()} onChange={(event)=> props.actions.handleTempo(event)} id=\"tempo-slider\" min=\"30\" max=\"180\" />\n                </div>\n                <div className=\"slider\">\n                    <div className=\"mute hidden\"></div>\n                    <div className=\"rotate-back\" id=\"volume-icon\" >&#128266;</div>\n                    {/* onClick={()=> props.actions.toggleMute()}  */}\n                    <input defaultValue={props.volume } type=\"range\" onChange={(event)=> props.actions.handleVolume(event)} step=\"0.01\" id=\"volume-slider\" min=\"0\" max=\"1\" />\n                </div>\n        </div>\n        </div>\n            }\n        </Consumer>\n    )\n}\n\nexport default ControlButtons"]},"metadata":{},"sourceType":"module"}